<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../fmx.xsl"?>
<fmx xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="m_xfunit_assertion_array_logical.f90">
    <context>
        <time>2025-03-09T17:50:33</time>
        <version>1.0.0.1</version>
        <path>src</path>
        <path_to_root>../</path_to_root>
        <project>XFunit</project>
        <name>m_xfunit_assertion_array_logical.f90</name>
        <copyright>Copyright © 2020, Fran Martinez Fadrique &lt;Fran.Martinez.Fadrique@gmail.com&gt;</copyright>
    </context>
    <units>
        <unit name="m_xfunit_assertion_array_logical" type="module">
            <main>
                <lines>
                    <source percent="26.15">17</source>
                    <comments percent="47.69">31</comments>
                    <empty percent="26.15">17</empty>
                    <total>65</total>
                </lines>
                <complexity>
                    <minimum>0</minimum>
                    <maximum>0</maximum>
                    <average>0.00</average>
                </complexity>
                <nesting>
                    <minimum>0</minimum>
                    <maximum>0</maximum>
                    <average>0.00</average>
                </nesting>
                <methods>0</methods>
            </main>
            <methods>
                <method name="xfunit_assertion_array_logical_array" type="function">
                    <statistics>
                        <lines>
                            <source percent="40.74">11</source>
                            <comments percent="25.93">7</comments>
                            <empty percent="33.33">9</empty>
                            <total>27</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="xfunit_assertion_array_logical_common" type="function">
                    <statistics>
                        <lines>
                            <source percent="42.31">11</source>
                            <comments percent="26.92">7</comments>
                            <empty percent="30.77">8</empty>
                            <total>26</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
            </methods>
            <statistics>
                <lines>
                    <source percent="33.05">39</source>
                    <comments percent="38.14">45</comments>
                    <empty percent="28.81">34</empty>
                    <total>118</total>
                </lines>
                <complexity>
                    <minimum>1</minimum>
                    <maximum>1</maximum>
                    <average>1.00</average>
                </complexity>
                <nesting>
                    <minimum>1</minimum>
                    <maximum>1</maximum>
                    <average>1.00</average>
                </nesting>
                <methods>2</methods>
            </statistics>
        </unit>
    </units>
    <statistics>
        <lines>
            <source percent="33.05">39</source>
            <comments percent="38.14">45</comments>
            <empty percent="28.81">34</empty>
            <total>118</total>
        </lines>
        <complexity>
            <minimum>1</minimum>
            <maximum>1</maximum>
            <average>1.00</average>
        </complexity>
        <nesting>
            <minimum>1</minimum>
            <maximum>1</maximum>
            <average>1.00</average>
        </nesting>
        <methods>2</methods>
    </statistics>
    <code>
        <line t="M" i="1" b="0" n="0">module m_xfunit_assertion_array_logical</line>
        <line t="M" i="2" b="0" n="0"></line>
        <line t="C" i="3" b="0" n="0">!-------------------------------------------------------------------------------</line>
        <line t="C" i="4" b="0" n="0">! Copyright : 2025, Fran Martinez Fadrique &lt;Fran.Martinez.Fadrique@gmail.com&gt;</line>
        <line t="C" i="5" b="0" n="0">! Project   : Atlantis</line>
        <line t="C" i="6" b="0" n="0">! Author    : Fran Martinez Fadrique</line>
        <line t="C" i="7" b="0" n="0">! Language  : Object Oriented Fortran 2018</line>
        <line t="C" i="8" b="0" n="0">! Synopsis  : Unit tests logical array assertion</line>
        <line t="C" i="9" b="0" n="0">!</line>
        <line t="C" i="10" b="0" n="0">! License   : This file is part of XFunit.</line>
        <line t="C" i="11" b="0" n="0">!</line>
        <line t="C" i="12" b="0" n="0">!             XFunit is free software: you can redistribute it and/or modify</line>
        <line t="C" i="13" b="0" n="0">!             it under the terms of the GNU Lesser General Public License as</line>
        <line t="C" i="14" b="0" n="0">!             published by the Free Software Foundation, either version 3 of</line>
        <line t="C" i="15" b="0" n="0">!             the License, or (at your option) any later version.</line>
        <line t="C" i="16" b="0" n="0">!</line>
        <line t="C" i="17" b="0" n="0">!             XFunit is distributed in the hope that it will be useful,</line>
        <line t="C" i="18" b="0" n="0">!             but WITHOUT ANY WARRANTY; without even the implied warranty of</line>
        <line t="C" i="19" b="0" n="0">!             MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</line>
        <line t="C" i="20" b="0" n="0">!             See the GNU Lesser General Public License for more details.</line>
        <line t="C" i="21" b="0" n="0">!</line>
        <line t="C" i="22" b="0" n="0">!             You should have received a copy of the GNU Lesser General Public</line>
        <line t="C" i="23" b="0" n="0">!             License along with XFunit.  </line>
        <line t="C" i="24" b="0" n="0">!             If not, see &lt;http://www.gnu.org/licenses/&gt;.</line>
        <line t="C" i="25" b="0" n="0">!-------------------------------------------------------------------------------</line>
        <line t="C" i="26" b="0" n="0"></line>
        <line t="C" i="27" b="0" n="0">!---USE statements--------------------------------------------------------------</line>
        <line t="C" i="28" b="0" n="0"></line>
        <line t="X" i="29" b="0" n="0">  use m_util_convert</line>
        <line t="X" i="30" b="0" n="0"></line>
        <line t="X" i="31" b="0" n="0">  use m_xfunit_assertion</line>
        <line t="X" i="32" b="0" n="0">  use m_xfunit_assertion_array</line>
        <line t="X" i="33" b="0" n="0">  use m_xfunit_assertion_logical</line>
        <line t="X" i="34" b="0" n="0"></line>
        <line t="C" i="35" b="0" n="0">!---End of use statements-------------------------------------------------------</line>
        <line t="C" i="36" b="0" n="0"></line>
        <line t="X" i="37" b="0" n="0">  implicit none</line>
        <line t="X" i="38" b="0" n="0"></line>
        <line t="C" i="39" b="0" n="0">!---Public/Private declarations-------------------------------------------------</line>
        <line t="C" i="40" b="0" n="0"></line>
        <line t="X" i="41" b="0" n="0">  private</line>
        <line t="X" i="42" b="0" n="0"></line>
        <line t="X" i="43" b="0" n="0">  public t_xfunit_assertion_array_logical</line>
        <line t="X" i="44" b="0" n="0">  public xfunit_assertion_array_logical</line>
        <line t="X" i="45" b="0" n="0"></line>
        <line t="C" i="46" b="0" n="0">!---End of public/private declarations------------------------------------------</line>
        <line t="C" i="47" b="0" n="0"></line>
        <line t="C" i="48" b="0" n="0">!---Declaration of module variables---------------------------------------------</line>
        <line t="C" i="49" b="0" n="0"></line>
        <line t="C" i="50" b="0" n="0">! The logical array assertion type</line>
        <line t="T" i="51" b="0" n="0">  type, extends(t_xfunit_assertion_array) :: t_xfunit_assertion_array_logical</line>
        <line t="T" i="52" b="0" n="0">  end type t_xfunit_assertion_array_logical</line>
        <line t="T" i="53" b="0" n="0"></line>
        <line t="C" i="54" b="0" n="0">! Constructor interface</line>
        <line t="X" i="55" b="0" n="0">  interface xfunit_assertion_array_logical</line>
        <line t="X" i="56" b="0" n="0">    module procedure xfunit_assertion_array_logical_common</line>
        <line t="X" i="57" b="0" n="0">    module procedure xfunit_assertion_array_logical_array</line>
        <line t="X" i="58" b="0" n="0">  end interface xfunit_assertion_array_logical</line>
        <line t="X" i="59" b="0" n="0"></line>
        <line t="C" i="60" b="0" n="0">!---End of declaration of module variables--------------------------------------</line>
        <line t="C" i="61" b="0" n="0"></line>
        <line t="X" i="62" b="0" n="0">contains</line>
        <line t="X" i="63" b="0" n="0"></line>
        <line t="C" i="64" b="0" n="0">! Constructor for logical array assertion (common expected)</line>
        <line k="xfunit_assertion_array_logical_common" t="F" i="65" b="1" n="1">function xfunit_assertion_array_logical_common( name, actual, expected ) result(res)</line>
        <line t="F" i="66" b="1" n="1"></line>
        <line t="C" i="67" b="1" n="1">! The assertion name</line>
        <line t="X" i="68" b="1" n="1">  character(len=*), intent(in) :: name</line>
        <line t="X" i="69" b="1" n="1"></line>
        <line t="C" i="70" b="1" n="1">! The assertion actual value</line>
        <line t="X" i="71" b="1" n="1">  logical(kind=4), dimension(:), intent(in) :: actual</line>
        <line t="X" i="72" b="1" n="1"></line>
        <line t="C" i="73" b="1" n="1">! The assertion expected value</line>
        <line t="X" i="74" b="1" n="1">  logical(kind=4), intent(in) :: expected</line>
        <line t="X" i="75" b="1" n="1"></line>
        <line t="C" i="76" b="1" n="1">! The returned assertion</line>
        <line t="X" i="77" b="1" n="1">  type(t_xfunit_assertion_array_logical) :: res</line>
        <line t="X" i="78" b="1" n="1"></line>
        <line t="C" i="79" b="1" n="1">! Local variables</line>
        <line t="X" i="80" b="1" n="1">  integer :: n</line>
        <line t="X" i="81" b="1" n="1">  type(t_xfunit_assertion_logical), allocatable, dimension(:) :: rast</line>
        <line t="X" i="82" b="1" n="1"></line>
        <line t="C" i="83" b="1" n="1">! Store the array information (assume all arrays conform to actual)</line>
        <line t="X" i="84" b="1" n="1">  n = size(actual)</line>
        <line t="X" i="85" b="1" n="1">  allocate( rast(n), source=xfunit_assertion_logical( name, actual, expected ) )</line>
        <line t="X" i="86" b="1" n="1">  res%t_xfunit_assertion_array = xfunit_assertion_array( name, xfunit_assertion_array_logical_index, rast )</line>
        <line t="X" i="87" b="1" n="1"></line>
        <line t="EF" i="88" b="1" n="1">end function xfunit_assertion_array_logical_common</line>
        <line t="EF" i="89" b="1" n="1"></line>
        <line t="EF" i="90" b="1" n="1"></line>
        <line t="C" i="91" b="1" n="1">! Constructor for logical array assertion</line>
        <line k="xfunit_assertion_array_logical_array" t="F" i="92" b="1" n="1">function xfunit_assertion_array_logical_array( name, actual, expected ) result(res)</line>
        <line t="F" i="93" b="1" n="1"></line>
        <line t="C" i="94" b="1" n="1">! The assertion name</line>
        <line t="X" i="95" b="1" n="1">  character(len=*), intent(in) :: name</line>
        <line t="X" i="96" b="1" n="1"></line>
        <line t="C" i="97" b="1" n="1">! The assertion actual value</line>
        <line t="X" i="98" b="1" n="1">  logical(kind=4), dimension(:), intent(in) :: actual</line>
        <line t="X" i="99" b="1" n="1"></line>
        <line t="C" i="100" b="1" n="1">! The assertion expected value</line>
        <line t="X" i="101" b="1" n="1">  logical(kind=4), dimension(:), intent(in) :: expected</line>
        <line t="X" i="102" b="1" n="1"></line>
        <line t="C" i="103" b="1" n="1">! The returned assertion</line>
        <line t="X" i="104" b="1" n="1">  type(t_xfunit_assertion_array_logical) :: res</line>
        <line t="X" i="105" b="1" n="1"></line>
        <line t="C" i="106" b="1" n="1">! Local variables</line>
        <line t="X" i="107" b="1" n="1">  integer :: n</line>
        <line t="X" i="108" b="1" n="1">  type(t_xfunit_assertion_logical), allocatable, dimension(:) :: rast</line>
        <line t="X" i="109" b="1" n="1"></line>
        <line t="C" i="110" b="1" n="1">! Store the array information (assume all arrays conform to actual)</line>
        <line t="X" i="111" b="1" n="1">  n = size(actual)</line>
        <line t="X" i="112" b="1" n="1">  allocate( rast(n), source=xfunit_assertion_logical( name, actual, expected ) )</line>
        <line t="X" i="113" b="1" n="1">  res%t_xfunit_assertion_array = xfunit_assertion_array( name, xfunit_assertion_array_logical_index, rast )</line>
        <line t="X" i="114" b="1" n="1"></line>
        <line t="EF" i="115" b="1" n="1">end function xfunit_assertion_array_logical_array</line>
        <line t="EF" i="116" b="1" n="1"></line>
        <line t="M" i="117" b="1" n="1">end module m_xfunit_assertion_array_logical</line>
        <line t="M" i="118" b="1" n="1"></line>
        <line t="M" i="119" b="1" n="1"></line>
    </code>
</fmx>